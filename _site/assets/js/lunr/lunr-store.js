var store = [{
        "title": "Основные значения фразового глагола take",
        "excerpt":"Take after – быть похожим, походить на (родителей, родственников) – когда говорят о характере, склонностях и т.п.     — Mary is very clever – she takes after her mother. – Мэри очень умная – она пошла в свою мать    Take away – забирать, убирать, отнимать, отбирать     — She was taken away to hospital – ее забрали в больницу       — Take 5 away from 10 – отними 5 от 10       — You can take the dishes away — можно убирать со стола    Take apart – еще одно сочетание глагола take , имеющее значение анализировать, разбирать     — We must take apart your sewing machine – мы должны разобрать вашу швейную машину       — I will take your problems apart – я разберусь с твоими проблемами    Take aside – отозвать, отвести в сторону (для разговора)     — She had to tell him something important therefore she took him aside — Ей нужно было сказать ему нечто важное, поэтому она отвела его в сторону    Take along – приводить, брать с собой (в дорогу) , привозить     — He took his sister along to school — Он привел свою сестру в школу       — She asked to take her along with me — Она попросила меня взять ее с собой    Take back – взять обратно, (слова) возвращать     — I take my words back, I was wrong — Беру свои слова обратно, я был неправ       — Take this lamp back to the shop — Верни эту лампу назад в магазин    Take in – вносить; убирать (паруса), ушивать (одежду); давать приют=брать жильцов; усваивать; обманывать; брать работу на дом;     — The piano was taken in and placed in the right corner — Пианино внесли в гостиную и поставили в правом углу       — I could not take in the new lesson — Я не смог усвоить новый урок       — She made her living by taking in — Она зарабатывала на жизнь, пуская жильцов       — When I don’t manage to perform the work at the office I take it in — Когда я не успеваю выполнить работу в офисе, я беру ее домой       — I have lost my weight and had to take in my dress — Я похуделa, и платье пришлось ушивать       — This child took us in — Это ребенок нас провел.    Take down – снять (одежду), снимать (откуда-то), сносить, записывать, разобрать (машину), уничтожить, снизить (цену)     — I took down his interesting speech – я записал ее интересную речь       — Mother took down the lamp to clean it – мама сняла лампу чтобы почистить ее       — The house was half ruined and it was decided to take in down – дом был наполовину разрушен и было решено снести его       — I came in and took down the wet jeans and boots – я вошел и снял мокрые джинсы и ботинки    Take on – брать, нанимать (брать на работу), взять на себя, приобретать, волноваться; сразиться с кем-то     — I won’t take on too much responsibility – я не возьму на себя слишком много ответственности       — We decided to take on at tennis – мы решили сразиться в теннис    Take out – удалять, извлекать, вынимать; выводить (гулять), вывести пятно; уничтожать; сводить счеты, давать выход гневу, выписывать.     — If I have time I’ll take you out to the park – если у меня будет время я поведу вас в парк       — Whatever I tried I couldn’t take out this spot – что бы я ни пробовал я не смог вывести это пятно       — I’m afraid but this tooth should be taken out – боюсь, но этот зуб нужно удалить       — There is no need to take it out! – Незачем выходить из себя.    Take off – снимать (одежду), увозить, уносить, уводить; сделать перерыв в работе; имитировать, копировать; снимать запрет; взлетать; пользоваться успехом, приобрести популярность;     — Take your hands off my bag – убери руки от моей сумки       — My wife fall ill and I have no choice but to take some days off – моя жена заболела и у меня нет другого выбора, кроме как взять несколько дней отгула.       — The plane will take off at 16:30 – самолет взлетит в 16:30       — She took off her hat and put it on the table – она сняла шляпу и положила ее на стол    Take over – брать ответственность, принимать руководство, вступать во владение; перевозить на другой берег     — When you change the job I’ll take over from you - Когда вы смените работу, я возьму с собой вас    Take through – объяснять, осуществлять, доводить до конца     — Would you please take me through this lesson? It seems to be difficult — Ты не мог бы объяснить мне этот урок? Мне он кажется трудным.    Take to – привязаться, пристраститься     — He was taken to his mother and couldn’t do without her – Он был очень привязан к своей матери и не мог без нее обходиться.    Take up – поднимать; занимать (место), принимать (вызов); снимать, выкапывать; браться за что-то, укорачивать; заниматься чем-то; встречаться с кем-либо; приобретать.     — He took up his luggage and carried it to the car – он поднял свой багаж и отнес к машине       — I’ll take up your matter, though it seems to be complicated – я возьмусь за ваше дело, хотя оно кажется сложным   ","categories": ["phrasel_verbs"],
        "tags": ["english"],
        "url": "/phrasel_verbs/phras_take/",
        "teaser": null
      },{
        "title": "Необычный взгляд на редактирование текста. Часть I.",
        "excerpt":"Каждому из нас хоть раз в жизни приходилось иметь дело с обработкой текстовых документов. Дело казалось бы обыденное, открыл “офис” и вперёд, но некоторые до сих пор его не любят за то, что в нём куча ненужных для них вещей, а кто-то просто откровенно ими не умеет пользоваться. :)   Данный набор советов не претендует на то, чтобы полностью заменить вам ваш привычный текстовый редактор. Однако здесь я покажу вам как с помощью бесплатной и самое главное мощной утилиты сделать редактирование текста максимально быстро и эффективно.   Первое, что необходимо вам понимать, это то, что данная утилита довольно-таки сложна для начального уровня и требует некоторого понимая работы в командной строке (да, исходная программа, которая называется *vi, не имеет графического интерфейса). И хотя я буду показывать все примеры в командной строке, эти же примеры можно повторить в программе *Vim, которая как раз имеет данный графический интерфейс и немногим облегчит вам работу.   Вторым пунктом я хотел бы выделить именно тот факт, что я не хочу чтобы вы уходили от того же MS Office, (да и функционал в данной программе несколько иной), я лишь хочу показать то, как не имея лицензии на крупные программные продукты, а также надобности в тяжелом редактировании текста, использовать действительно полезный и главное очень эффективный продукт.   Итак, пустимся же в “весёлое приключение” по небольшой Вселенной Vi и Vim!   1. Это необходимо знать   Прежде чем приступить к написанию советов, хотелось бы остановиться на паре моментов, которые необходимо помнить.      Установка. Скачать и установить ПО вы можете по данной ссылке. Сложного в установке нет ничего, поэтому я верю в то, что вы справитесь. Я же буду использовать версию vi, которая есть в моем текстовом редакторе VS Code. Не пугайтесь! Всё, что я буду делать, вы сможете сделать и в Vim, установленный лично вами.   Примеры. Всё, что я буду выполнять, будет сопровождаться gif-анимационным файлом, в котором будут показаны все клавиши, задействованные в данном примере. Это очень удобно, как мне кажется, и вы сможете всегда вернуться и разобрать непонятный вам материал (хотя я очень верю, что такового не будет!). К сожалению, исходники самих примеров я выкладывать никуда не буду, поэтому вам придется на личных примерах разбираться как использовать ту или иную команду. Это поможет вам более тщательнее изучить весь материал и более подробно разобраться в интерфейсе и командах программы.   Слепая печать. Пожалуй, это единственное условие, которое необходимо выполнить прежде чем приступить к изучению Vim. Вам действительно будет тяжело разобраться в некоторых моментах без данного навыка, так как эфффективность работы в данной программе достигается за счёт ловкости рук!   2. Совет № 1. Повторение - мать учения   В повседной работе мы не замечаем как часто выполняем одни и те же операции: “скопировал - вставил”, “скопировал - вставил” и так десятки, а то и сотни раз всеразличных комбинаций клавиш. Если мы сможем как-то упростить выполнение одних и тех же операций, то сэкономим большое количество времени.   Редактор Vim позволяет отслеживать последние выполняемые операции и затем повторять их снова и снова, пока нам это будет необходимо. Однако, прежде чем приступить к редактированию какого-либо текста, необходимо упомянуть о двух основных режимах работы редактора Vim:     командный режим - обыкновенное состояние редактора, в котором выполняются все команды, за исключение главной функции редактора - редактирование текста. И это следует понимать, потому что очень часто возникают казусы, по которым люди не понимают различия в режимах и тем самым не могут найти решение в той или иной проблеме.   режим вставки - как понятно из названия, в данном режиме происходит набор необходимого нам текста.   При входе в программу вы попадаете в командный режим, а при нажатии клавиши i в режим вставки. Для того чтобы вернуться обратно в командный режим необходимо нажать клавишу Esc. Как видим ничего сложного нет!      Примечание. Как узнать в каком режиме вы сейчас находитесь? Очень просто, в режиме вставки в левом нижнем углу будет надпись --ВСТАВКА-- или --INSERT-- (если у вас установлена англоязычная версия). При выходе в командный режим данная надпись исчезает.    Итак, для того чтобы повторить последнее изменение, в редакторе Vim существует команда “точка”. Данная команда одна из самых мощных и гибких в редакторе. При этом, под “последними изменениями” понимается изменение как над отдельными символами, целыми строками или даже файлами!      Краткая справка по командам.     Все команды выполняются в командном режиме!          h - шаг влево     j - шаг вниз     k - шаг вверх     l - шаг вправо     x - удаление символа под курсором     u - отменить последнее изменение     dd - удаление целой строки      Текущие команды будут использоваться в нашем первом примере. Вы увидите каким образом происходит перемещение по файлу, удаление символа, строки, а также повторение этих же действий с использованием магической команды “точка”.   В качестве примера я возьму небольшую программу и в ней проведу все наши эксперименты.                                                    Пример 1. Демонстрация применения команды точка       Обратите внимание на то, где расположен курсор и какие изменения происходят после выполнения определенной команды. А еще лучше, возьмите произвольный текст и поиграйтесь сами, выполняя различные команды.      Замечание!!! Для того чтобы выйти из данного редактора, особенно если вы выполняете упражнения в командной строке, необходимо выполнить одну из комбинаций клавиш:         :q! - выход из программы без сохранения     :wq - выход из программы c сохранением       Не забывайте, что команды выполняются в командном режиме!!!     Данная проблема очень популярна в интернете, так как начинающие пользователи не имеют представления как выйти из данного редактора. По этому поводу есть даже небольшая заметка в блоге stackoverflow. Там отмечено, что помощью по вопросу выхода из Vim воспользовалось более 1 млн. человек!!!   ","categories": [],
        "tags": ["vim"],
        "url": "/vim_1/",
        "teaser": null
      },{
        "title": "Welcome to Jekyll!",
        "excerpt":"First Section  You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.   Second Section  Jekyll requires blog post files to be named according to the following format:   YEAR-MONTH-DAY-title.MARKUP   First Subsection  Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.   Jekyll also offers powerful support for code snippets:   def print_hi(name)   puts \"Hi, #{name}\" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT.  Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.   ","categories": ["jekyll","update"],
        "tags": ["jekyll"],
        "url": "/jekyll/update/welcome-to-jekyll/",
        "teaser": null
      }]
